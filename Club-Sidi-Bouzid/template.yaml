AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Club-Sidi-Bouzid

  Sample SAM Template for Club-Sidi-Bouzid

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3
    MemorySize: 128
    Tracing: Active
  Api:
    TracingEnabled: true

Parameters:
  HostedZoneParameter:
    Type: String
    Description: The hosted zone for the Route53 records
    Default: Z00543211HOJXANSJTUNO
  DomainNameParameter:
    Type: String
    Description: The domain name of the site
    Default: club-sidi-bouzid.link
  ApiDomainNameParameter:
    Type: String
    Description: The subdomain of the API
    Default: api.
  WebsiteDomainNameParameter:
    Type: String
    Description: The subdomain of the website
    Default: website.

Resources:
# The creation of S3 bucket:
  MyWebsite:
    Type: AWS::S3::Bucket
    Properties: 
      WebsiteConfiguration:
          IndexDocument: index.html 
      BucketName: salma-tanaoui-website

  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      PolicyDocument:
        Id: MyPolicy
        Version: 2012-10-17
        Statement:
        - Sid: PublicReadForGetBucketObjects
          Effect: Allow
          Principal: '*'
          Action: s3:GetObject
          Resource:
            Fn::Join:
            - ''
            - - 'arn:aws:s3:::'
              - Ref: MyWebsite
              - /*
      Bucket:
        Ref: MyWebsite

  MyCertificate:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: club-sidi-bouzid.link
      ValidationMethod: DNS

  MyDistribution:
    Type: "AWS::CloudFront::Distribution"
    Properties:
      DistributionConfig:
        ViewerCertificate:
          AcmCertificateArn: arn:aws:acm:us-east-1:599223794093:certificate/12e54bd2-d66f-4633-9f2d-49e1b0b705dc
          SslSupportMethod: sni-only
        Aliases:
          - club-sidi-bouzid.link
        DefaultCacheBehavior:
          ViewerProtocolPolicy: redirect-to-https
          TargetOriginId: salma-tanaoui-website.s3.eu-west-3.amazonaws.com
          DefaultTTL: 0
          MinTTL: 0
          MaxTTL: 0
          ForwardedValues:
            QueryString: false
        Origins:
          - DomainName: salma-tanaoui-website.s3.eu-west-3.amazonaws.com
            Id: salma-tanaoui-website.s3.eu-west-3.amazonaws.com
            CustomOriginConfig:
               OriginProtocolPolicy: match-viewer
        Enabled: "true"
        DefaultRootObject: index.html

  ApiGatewayApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: MyApiGatewayApi
      StageName: prod
      Domain:
        DomainName:
          Fn::Join:
            - ''
            - - !Ref ApiDomainNameParameter
              - !Ref DomainNameParameter
        CertificateArn: !Ref MyCertificate
        Route53:
          HostedZoneId: Z00543211HOJXANSJTUNO

  DynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: salma-first-table
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: "ID"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "ID"
          KeyType: "HASH"

  MyRoute53Record:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneId: Z00543211HOJXANSJTUNO
      RecordSets:
        - Name: club-sidi-bouzid.link
          Type: A
          AliasTarget:
             HostedZoneId: Z2FDTNDATAQYW2
             DNSName: !GetAtt MyDistribution.DomainName

  HelloWorldFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: hello_world/
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
      - x86_64
      Events:
        HelloWorld:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /hello
            Method: post

  ApplicationResourceGroup:
    Type: AWS::ResourceGroups::Group
    Properties:
      Name:
        Fn::Sub: ApplicationInsights-SAM-${AWS::StackName}
      ResourceQuery:
        Type: CLOUDFORMATION_STACK_1_0
  ApplicationInsightsMonitoring:
    Type: AWS::ApplicationInsights::Application
    Properties:
      ResourceGroupName:
        Ref: ApplicationResourceGroup
      AutoConfigurationEnabled: 'true'
Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  HelloWorldApi:
    Description: API Gateway endpoint URL for Prod stage for Hello World function
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
  HelloWorldFunction:
    Description: Hello World Lambda Function ARN
    Value: !GetAtt HelloWorldFunction.Arn
  HelloWorldFunctionIamRole:
    Description: Implicit IAM Role created for Hello World function
    Value: !GetAtt HelloWorldFunctionRole.Arn